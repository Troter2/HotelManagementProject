from github import Github
import matplotlib.pyplot as plt
import os
import datetime

# This is the generic report of the histogram issues of the repository,
# this will must be manually generated by running the
# 'histogram_general_report_generator.yml' workflow

token = os.getenv('GITHUB_TOKEN')
repo_name = "Troter2/HotelManagementProject"

g = Github(token)
repo = g.get_repo(repo_name)

labels_count = {
    "back-end": 0,
    "bug": 0,
    "database": 0,
    "documentation": 0,
    "front-end": 0,
    "tests": 0,
    "wontfix": 0,
}


def get_date() -> str:
    """The format is: MX -> where X is number of month"""
    now = datetime.datetime.now()
    month = now.strftime("%m")
    return f"M{month}"


# This is the state of the issues that this is gathering:
# "all" - All issues assigned to the repository
# "open" - Open issues assigned to the repository
# "closed" - Closed issues assigned to the repository
def count_labels(state="all") -> None:
    """Count the number of issues with each label"""
    for issue in repo.get_issues(state=state):
        for label in issue.labels:
            if label.name in labels_count:
                labels_count[label.name] += 1


def generate_plot() -> None:
    """Generate a histogram of the number of issues with each label"""
    plt.figure(figsize=(10, 6))
    plt.bar(labels_count.keys(), labels_count.values())
    plt.ylabel('Number of Issues')
    plt.title('Histogram of Issues by Label - General Report')
    plt.xticks(rotation=20)
    plt.yticks(range(0, max(labels_count.values()) + 1))
    plt.savefig("histogram_issues.png")


def main() -> None:
    count_labels()
    generate_plot()


if __name__ == '__main__':
    main()
